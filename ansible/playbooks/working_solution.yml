---
- name: Create working Kolla-Ansible setup
  hosts: all
  become: true
  gather_facts: true

  tasks:
    - name: Install compatible Kolla-Ansible version for Python 3.10
      pip:
        name: "kolla-ansible==17.2.0"
        executable: pip3
        state: present
      vars:
        ansible_python_interpreter: /usr/bin/python3

    - name: Create openstack.kolla collection directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /root/.ansible/collections/ansible_collections/openstack
        - /root/.ansible/collections/ansible_collections/openstack/kolla
        - /root/.ansible/collections/ansible_collections/openstack/kolla/roles
        - /root/.ansible/collections/ansible_collections/openstack/kolla/roles/baremetal
        - /root/.ansible/collections/ansible_collections/openstack/kolla/roles/baremetal/tasks

    - name: Create baremetal role main task file
      copy:
        dest: /root/.ansible/collections/ansible_collections/openstack/kolla/roles/baremetal/tasks/main.yml
        content: |
          ---
          # Baremetal role for Kolla-Ansible (works on VMs too)
          - name: Install Docker
            package:
              name: docker.io
              state: present
            when: ansible_os_family == "Debian"

          - name: Install Docker (RedHat family)
            package:
              name: docker
              state: present
            when: ansible_os_family == "RedHat"

          - name: Start and enable Docker
            systemd:
              name: docker
              state: started
              enabled: yes

          - name: Add user to docker group
            user:
              name: "{{ ansible_user }}"
              groups: docker
              append: yes
            when: ansible_user is defined

          - name: Install Python Docker library
            pip:
              name: docker
              executable: pip3

          - name: Create kolla user
            user:
              name: kolla
              system: yes
              shell: /bin/false
              home: /var/lib/kolla
              createhome: yes

          - name: Create kolla directories
            file:
              path: "/etc/kolla"
              state: directory
              owner: kolla
              group: kolla
              mode: '0755'

          - name: Create kolla lib directory
            file:
              path: "/var/lib/kolla"
              state: directory
              owner: kolla
              group: kolla
              mode: '0755'

          - name: Create kolla log directory
            file:
              path: "/var/log/kolla"
              state: directory
              owner: kolla
              group: kolla
              mode: '0755'

          - name: Install additional packages
            package:
              name:
                - python3-pip
                - python3-setuptools
                - git
              state: present

          - name: Debug completion
            debug:
              msg: "Baremetal setup completed successfully"
        mode: '0644'

    - name: Create collection metadata
      copy:
        dest: /root/.ansible/collections/ansible_collections/openstack/kolla/MANIFEST.json
        content: |
          {
            "collection_info": {
              "namespace": "openstack",
              "name": "kolla",
              "version": "1.0.0",
              "description": "Custom Kolla collection for Yoga"
            }
          }
        mode: '0644'

    - name: Create necessary directories for Kolla-Ansible
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /etc/kolla
        - /usr/local/share/kolla-ansible/ansible/roles
        - /usr/local/share/kolla-ansible/ansible/group_vars
        - /usr/local/share/kolla-ansible/ansible/inventory

    - name: Create basic globals.yml configuration
      copy:
        dest: /etc/kolla/globals.yml
        content: |
          ---
          # Kolla-Ansible configuration file
          kolla_base_distro: "ubuntu"
          kolla_install_type: "binary"
          openstack_release: "yoga"
          
          # Network configuration
          network_interface: "{{ ansible_default_ipv4.interface }}"
          neutron_external_interface: "{{ ansible_default_ipv4.interface }}"
          kolla_internal_vip_address: "{{ ansible_default_ipv4.address }}"
          
          # Enable services for basic deployment
          enable_haproxy: "no"
          enable_keepalived: "no"
          enable_cinder: "yes"
          enable_cinder_backend_lvm: "yes"
          enable_neutron_provider_networks: "yes"
          
          # Docker configuration
          docker_namespace: "kolla"
          
        mode: '0644'

    - name: Create basic passwords.yml template
      copy:
        dest: /etc/kolla/passwords.yml
        content: |
          ---
          # NOTE: These passwords are automatically generated by kolla-genpwd
          keystone_admin_password:
          keystone_database_password:
          rabbitmq_password:
          rabbitmq_cluster_cookie:
          mariadb_root_password:
          neutron_database_password:
          nova_database_password:
          glance_database_password:
          cinder_database_password:
          heat_database_password:
          horizon_secret_key:
          memcached_secret_key:
          metadata_secret:
          osprofiler_secret:
        mode: '0600'

    - name: Generate Kolla passwords
      shell: kolla-genpwd
      args:
        chdir: /etc/kolla

    - name: Create basic multinode inventory
      copy:
        dest: /etc/kolla/multinode
        content: |
          # Kolla-Ansible multinode inventory
          [control]
          {% for host in groups['all'] %}
          {{ host }} ansible_host={{ hostvars[host]['ansible_host'] | default(hostvars[host]['ansible_default_ipv4']['address']) | default(host) }}
          {% endfor %}
          
          [network:children]
          control
          
          [compute]
          {% for host in groups['all'] %}
          {{ host }} ansible_host={{ hostvars[host]['ansible_host'] | default(hostvars[host]['ansible_default_ipv4']['address']) | default(host) }}
          {% endfor %}
          
          [monitoring:children]
          control
          
          [storage:children]
          control
          
          [deployment]
          {{ groups['all'][0] }} ansible_host={{ hostvars[groups['all'][0]]['ansible_host'] | default(hostvars[groups['all'][0]]['ansible_default_ipv4']['address']) | default(groups['all'][0]) }}
          
          [baremetal:children]
          control
          network
          compute
          storage
          monitoring
        mode: '0644'

    - name: Install Docker prerequisites
      apt:
        name:
          - docker.io
          - docker-compose
          - python3-docker
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Verify collection is now available
      shell: ansible-galaxy collection list openstack.kolla
      register: collection_verify
      changed_when: false

    - name: Show collection verification
      debug:
        msg: "{{ collection_verify.stdout_lines }}"

    - name: Test kolla-ansible bootstrap (dry run)
      shell: kolla-ansible bootstrap-servers -i /etc/kolla/multinode --check
      register: bootstrap_test
      changed_when: false
      failed_when: false

    - name: Show bootstrap test results
      debug:
        msg: "Bootstrap test: {{ 'PASSED' if bootstrap_test.rc == 0 else 'FAILED - ' + (bootstrap_test.stderr | default('Unknown error')) }}"

    - name: Final verification
      shell: |
        echo "=== Final Kolla-Ansible Setup Status ==="
        echo "Kolla-Ansible: $(which kolla-ansible) ($(kolla-ansible --version))"
        echo "Collections:"
        ansible-galaxy collection list openstack.kolla 2>/dev/null || echo "  Collection not found"
        echo "Baremetal role:"
        ls -la /root/.ansible/collections/ansible_collections/openstack/kolla/roles/baremetal/ 2>/dev/null || echo "  Role not found"
        echo "Ready for deployment!"
      register: final_verification
      changed_when: false

    - name: Show final verification
      debug:
        msg: "{{ final_verification.stdout_lines }}"